{"version":3,"sources":["Components/Spinner/Spinner.jsx","Context/auth-context.js","Components/Feeds/ViewFeed/ViewFeed.jsx","Components/Feeds/PostFeed/PostFeed.jsx","Components/Feeds/Feeds.jsx","Components/FollowPane/Users/Users.jsx","Components/FollowPane/FollowPane.jsx","Components/MenuBar/MenuBar.jsx","Pages/HomePage/HomePage.jsx","Pages/utils/helpers.js","Pages/Login/Login.jsx","Pages/SignUp/SignUp.jsx","App.jsx","index.js"],"names":["Col","className","Spinner","variant","animation","role","AuthContext","createContext","isLoggedIn","uid","token","login","logout","PostFeed","update","tweetsUpdated","auth","useContext","useState","isLoading","setIsLoading","loadedTweets","setLoadedTweets","useEffect","sendRequest","a","fetch","process","response","json","responseData","console","log","tweets","ListGroup","length","map","post","Item","action","as","style","padding","border","Row","Card","Body","display","Figure","height","width","Image","src","image","user","profile_image_url","marginLeft","name","Date","createdDate","toUTCString","slice","tweet","fontSize","icon","faReply","faHeart","margin","ViewFeed","props","tweetText","setTweetText","handleSubmit","event","preventDefault","method","headers","body","JSON","stringify","feedUpdate","marginRight","Title","Text","maxHeight","onChange","e","target","value","placeholder","size","faSmile","faImage","onClick","Feeds","setUpdate","loadedUsers","setLoadedUsers","newFollow","setNewFollow","message","users","follow","followUid","updateTweet","to","alignItems","profile_image_url_https","alt","flex","xs","Button","FollowPane","Header","fontWeight","Users","homeTweetUpdate","Footer","MenuBar","list","faPlusCircle","href","faHome","faHashtag","faUser","faBell","count","faEllipsisH","faEnvelope","paddingRight","color","faTwitter","itm","activeClassName","paddingLeft","HomePage","setUpdateTweet","minWidth","sm","xl","lg","md","filterInput","input","type","min_length","min","max_length","max","regex","reg","identifier","toString","trim","regexes","username","RegExp","password","test","Error","DOMPurify","sanitize","ALLOWED_TAGS","includes","replace","Login","state","disabled","error","handleChange","setState","form","status","ok","data","context","this","maxWidth","Form","onSubmit","Group","controlId","Label","Control","autoCapitalize","autoCorrect","React","Component","contextType","SignUp","fullname","paddingBottom","autoComplete","App","setToken","setUid","routes","useCallback","path","exact","element","Provider","require","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce395f41.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Spinner, Col } from 'react-bootstrap'\r\n\r\nexport default function () {\r\n    return (\r\n        <Col className=\"d-flex justify-content-center py-5\">\r\n            <Spinner variant=\"primary\" animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n        </Col>\r\n    )\r\n}","import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    uid: null,\r\n    token: null,\r\n    login: () => {},\r\n    logout: () => {}\r\n});","import { useEffect, useState, useContext } from \"react\";\r\nimport Spinner from \"../../Spinner/Spinner\";\r\nimport { Card, Row, ListGroup, Figure } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons/faHeart\";\r\nimport { faReply } from \"@fortawesome/free-solid-svg-icons/faReply\";\r\nimport { AuthContext } from \"../../../Context/auth-context\";\r\nconst PostFeed = ({ update, tweetsUpdated }) => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loadedTweets, setLoadedTweets] = useState();\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/tweets/${auth.uid}`);\r\n        const responseData = await response.json();\r\n        console.log(response, responseData);\r\n        setLoadedTweets(responseData.tweets);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    sendRequest();\r\n  }, [update, tweetsUpdated]);\r\n\r\n  return (\r\n    <ListGroup>\r\n      {loadedTweets && loadedTweets.length > 0 ? (\r\n        loadedTweets.map((post) => {\r\n          return (\r\n            <ListGroup.Item\r\n              className=\"px-3\"\r\n              action\r\n              as={\"div\"}\r\n              style={{ padding: \"0\", border: \"none\" }}\r\n            >\r\n              <Row className=\"d-flex px-3 pb-1 mt-n2 text-muted\"></Row>\r\n\r\n              <Card className=\"mb-n2 w-100\">\r\n                <Card.Body>\r\n                  <div style={{ display: \"flex\" }}>\r\n                    <div className=\"rounded-circle\">\r\n                      <Figure\r\n                        className=\"bg-border-color rounded-circle mr-2 overflow-hidden\"\r\n                        style={{ height: \"50px\", width: \"50px\" }}\r\n                      >\r\n                        <Figure.Image\r\n                          src={\r\n                            post.image\r\n                              ? post.user.profile_image_url\r\n                              : \"/img/default-profile-vector.svg\"\r\n                          }\r\n                          className=\"w-100 h-100\"\r\n                        />\r\n                      </Figure>\r\n                    </div>\r\n                    <div style={{ marginLeft: \"1rem\" }}>\r\n                      <div className=\"d-flex\">\r\n                        <div className=\"text-dark font-weight-bold mr-1\">\r\n                          {post.name}\r\n                        </div>\r\n                        <span className=\"text-muted mr-1\">@{post.uid}</span>\r\n                        <pre className=\"m-0 text-muted\">{\" - \"}</pre>\r\n                        <span className=\"text-muted\">\r\n                          {new Date(post.createdDate)\r\n                            .toUTCString()\r\n                            .slice(5, 11)}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"mb-n1 mt-1\">\r\n                        <blockquote className=\"mb-1 mw-100\">\r\n                          <div className=\"mw-100 overflow-hidden\">\r\n                            {post.tweet}\r\n                          </div>\r\n                        </blockquote>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <Row className=\"d-flex justify-content-end align-items-center position-static\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <div className=\"btn btn-naked-secondary rounded-pill high-index\">\r\n                        <FontAwesomeIcon\r\n                          style={{ fontSize: \"1.2em\" }}\r\n                          className=\"mb-1 text-muted\"\r\n                          icon={faReply}\r\n                        />\r\n                      </div>\r\n                      <button className=\"btn btn-naked-danger rounded-pill high-index\">\r\n                        <FontAwesomeIcon icon={faHeart} />\r\n                      </button>\r\n                    </div>\r\n                  </Row>\r\n                </Card.Body>\r\n              </Card>\r\n            </ListGroup.Item>\r\n          );\r\n        })\r\n      ) : isLoading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <h1 style={{ padding: \"2rem\", margin: \"4rem\" }}>No tweets</h1>\r\n      )}\r\n    </ListGroup>\r\n  );\r\n};\r\n\r\nexport default PostFeed;\r\n","import { Card } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport { useState, useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faImage } from \"@fortawesome/free-regular-svg-icons/faImage\";\r\nimport { AuthContext } from \"../../../Context/auth-context\";\r\nimport { faSmile } from \"@fortawesome/free-regular-svg-icons/faSmile\";\r\n\r\nconst ViewFeed = (props) => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const [tweetText, setTweetText] = useState();\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/tweets/`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n            uid: auth.uid,\r\n            tweet: tweetText\r\n        })\r\n    })\r\n    props.feedUpdate(true);\r\n    setTweetText(\"\");\r\n\r\n    console.log(response)\r\n\r\n  }\r\n\r\n  return (\r\n    <Card className=\"mb-n2 w-100 pb-1 mt-n2\"  style={{ padding: \"0\",marginRight:\"2rem\" }} >\r\n      <Card.Body>\r\n        <Card.Title>Home</Card.Title>\r\n        <Card.Text>\r\n          <textarea\r\n            className=\"w-100 p-2\"\r\n            style={{ maxHeight: \"80vh\" }}\r\n            name=\"text\"\r\n            onChange={(e)=> setTweetText(e.target.value)}\r\n            value={tweetText}\r\n            placeholder=\"What's happening?\"\r\n          ></textarea>\r\n          <div className=\"border-top d-flex justify-content-between align-items-center pt-2\">\r\n            <div style={{ fontSize: \"1.5em\" }}>\r\n             \r\n              <button className=\" text-primary btn btn-lg rounded-circle btn-naked-primary p-2\">\r\n              <FontAwesomeIcon size=\"lg\" icon={faSmile} />\r\n              </button>\r\n              <button className=\" text-primary btn btn-lg rounded-circle btn-naked-primary p-2\">\r\n                <FontAwesomeIcon size=\"lg\" icon={faImage} />\r\n              </button>\r\n            </div>\r\n            <div className=\"right\">\r\n              <button\r\n                onClick={handleSubmit}\r\n                className=\"btn btn-primary rounded-pill px-3 py-2 font-weight-bold\"\r\n              >\r\n                Tweet\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ViewFeed;\r\n","import ViewFeed from \"./ViewFeed/ViewFeed\";\r\nimport PostFeed from \"./PostFeed/PostFeed\";\r\nimport { useState } from \"react\";\r\n\r\nconst Feeds = (props) => {\r\n  let [update, setUpdate] = useState();\r\n\r\n  const feedUpdate = (value) => {\r\n    setUpdate(!update);\r\n  };\r\n  return (\r\n    <>\r\n      <PostFeed feedUpdate={feedUpdate} />\r\n      <ViewFeed tweetsUpdated={props.tweetsUpdated} update={update} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feeds;\r\n","import { useEffect, useState, useContext } from \"react\";\r\nimport { ListGroup, Row, Col, Button } from \"react-bootstrap\";\r\nimport Spinner from \"../../Spinner/Spinner\";\r\nimport { AuthContext } from \"../../../Context/auth-context\";\r\n\r\nexport default (props) => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoading, setIsLoading] = useState();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  const [newFollow, setNewFollow] = useState();\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/${auth.uid}`\r\n        );\r\n        const responseData = await response.json();\r\n        console.log( responseData.message);\r\n        setLoadedUsers(responseData.users);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    sendRequest();\r\n  }, [newFollow]);\r\n\r\n  const follow =async (followUid) => {\r\n    let response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users/${auth.uid}`, {\r\n      method: 'PATCH',\r\n      body: JSON.stringify({\r\n        followUid: followUid,\r\n      }),\r\n      headers: {\r\n          'Content-Type': 'application/json'\r\n      }\r\n  })\r\n  const responseData = await response.json();\r\n  setNewFollow(!newFollow);\r\n  console.log(response, responseData);\r\n  console.log(\"LOADED:\", loadedUsers);\r\n  props.updateTweet(true);\r\n  \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListGroup className={\"border-bottom \"} variant=\"flush\">\r\n        {loadedUsers && loadedUsers.length ? (\r\n          loadedUsers.map((user) => {\r\n            return (\r\n              <ListGroup.Item\r\n                className=\"px-1 text-truncate\"\r\n                action\r\n                key={user.uid}\r\n                user={user}\r\n                to={`/user/${user.uid}`}\r\n              >\r\n                <div style={{ display: \"flex\", alignItems: \"flex-start\" }}>\r\n                  <img\r\n                    width={50}\r\n                    height={50}\r\n                    className=\"rounded-circle mx-1\"\r\n                    src={\r\n                      user.profile_image_url_https ||\r\n                      \"/img/default-profile-vector.svg\"\r\n                    }\r\n                    alt=\"\"\r\n                  />\r\n                  <div style={{ flex: \"1 1\" }}>\r\n                    <Row>\r\n                      <Col className=\"pr-5 pr-lg-4 pr-xl-2\" xs=\"8\">\r\n                        <p className=\"text-dark mb-0 text-truncate text-capitalize font-weight-bold\">\r\n                          {user.name}\r\n                        </p>\r\n                        <p className=\"text-muted text-truncate mt-n1\">\r\n                          {\" \"}\r\n                          @{user.uid}\r\n                        </p>\r\n                      </Col>\r\n                      <Col\r\n                        className=\"d-flex align-items-center justify-content-end px-1\"\r\n                        xs=\"4\"\r\n                      >\r\n                        <Button\r\n                          onClick={()=>follow(user.uid)}\r\n                          className=\"rounded-pill px-3 py-1 font-weight-bold\"\r\n                        >\r\n                          <span>Follow</span>\r\n                        </Button>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </div>\r\n              </ListGroup.Item>\r\n            );\r\n          })\r\n        ) : isLoading? <Spinner />: <h4 style={{padding: \"1rem\"}}> No users</h4>}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Users from \"./Users/Users\";\r\n\r\nconst FollowPane = (props) => {\r\nconst updateTweet = (value) => {\r\n  props.homeTweetUpdate(true);\r\n}\r\n  return (\r\n    <Card className=\"my-3\">\r\n      <Card.Header style = {{ fontWeight: \"800\", fontSize:\"1.2rem\", border: \"none\"}}>You might like</Card.Header>\r\n      <Users updateTweet={updateTweet}  length={props.length} />\r\n      <Card.Footer style = {{  border: \"none\"}}>\r\n        \r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\nexport default FollowPane;\r\n","import React, { useContext } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons/faTwitter\";\r\nimport { faBell } from \"@fortawesome/free-regular-svg-icons/faBell\";\r\nimport { faEnvelope } from \"@fortawesome/free-regular-svg-icons/faEnvelope\";\r\nimport { faUser } from \"@fortawesome/free-regular-svg-icons/faUser\";\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons/faHome\";\r\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons/faEllipsisH\";\r\nimport { faHashtag } from \"@fortawesome/free-solid-svg-icons/faHashtag\";\r\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons/faPlusCircle\";\r\nimport { AuthContext } from \"../../Context/auth-context\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Col, Button } from \"react-bootstrap\";\r\n\r\nconst MenuBar = () => {\r\n  const auth = useContext(AuthContext);\r\n  let logo = {\r\n    href: \"/home\",\r\n  };\r\n  let compose = {\r\n    name: \"Post\",\r\n    icon: faPlusCircle,\r\n  };\r\n  let list = [\r\n    {\r\n      name: \"Home\",\r\n      href: \"/home\",\r\n      icon: faHome,\r\n    },\r\n    {\r\n      name: \"Explore\",\r\n      href: \"/explore\",\r\n      icon: faHashtag,\r\n    },\r\n    {\r\n      name: \"Profile\",\r\n      href: `/user`,\r\n      icon: faUser,\r\n    },\r\n    {\r\n      name: \"Notifications\",\r\n      href: \"/notifications\",\r\n      icon: faBell,\r\n      count: 0,\r\n    },\r\n    {\r\n      name: \"Settings\",\r\n      href: \"/settings\",\r\n      icon: faEllipsisH,\r\n    },\r\n    {\r\n      name: \"Messages\",\r\n      href: \"/messages\",\r\n      icon: faEnvelope,\r\n    },\r\n  ];\r\n  return (\r\n    <Col className=\"d-flex flex-column align-items-end vh-100 overflow-y-auto mr-sm-n3 mr-md-0 mr-xl-3 hide-scroll\">\r\n      <div style={{ paddingRight: \"7rem\" }} className=\"my-2 mr-xl-auto ml-xl-4\">\r\n          <FontAwesomeIcon style={{color: \"#1DA1F2\"}} className=\"m-2\" size=\"3x\" icon={faTwitter} />\r\n      </div>\r\n      <div className=\"ml-0 d-flex flex-column mb-2 align-items-start\">\r\n        {list.map((itm) => {\r\n          \r\n          return (\r\n            <div\r\n              key={itm.name}\r\n              className=\"d-flex align-items-top position-relative\"\r\n            >\r\n              <NavLink\r\n                to={itm.href}\r\n                className={` px-xl-2 py-xl-1 p-1 mb-2 mx-lg-0 mx-auto btn btn-naked-primary rounded-pill font-weight-bold btn-lg d-flex align-items-center`}\r\n                activeClassName=\"active\"\r\n              >\r\n                <FontAwesomeIcon className=\"m-2\" size=\"lg\" icon={itm.icon} />\r\n                <span className=\"d-none d-xl-block mr-2\">{itm.name}</span>\r\n              </NavLink>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <Button\r\n        style={{ width: \"10rem\",margin:\"auto\", paddingLeft:\"2.5rem\" }}\r\n        className=\"d-flex btn btn-primary font-weight-bold outline-warning rounded-pill\"\r\n        variant=\"dark\"\r\n        size=\"lg\"\r\n        onClick={auth.logout}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React, {useState} from 'react';\r\nimport Feeds from \"../../Components/Feeds/Feeds\";\r\nimport FollowPane from \"../../Components/FollowPane/FollowPane\";\r\nimport MenuBar from \"../../Components/MenuBar/MenuBar\";\r\nimport MediaQuery from 'react-responsive'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport \"./HomePage.css\"\r\n\r\nconst HomePage = () => {\r\n  const [updateTweet, setUpdateTweet] = useState();\r\n  const updateTweets = (value) => {\r\n    setUpdateTweet(!updateTweet);\r\n  }\r\n  return (\r\n    \r\n          <Row className=\"home-page-row\">\r\n            <MediaQuery minWidth={576}>\r\n              <Col sm=\"1\" xl=\"2\" className=\"d-flex flex-column align-items-end p-0 sticky-top vh-100\">\r\n                <MenuBar />\r\n              </Col>\r\n            </MediaQuery>\r\n            <Col sm=\"11\" xl=\"6\" lg=\"4\" md=\"4\">\r\n                <Feeds tweetsUpdated={updateTweet}/>\r\n            </Col>\r\n            <MediaQuery minWidth={322}>\r\n                <Col lg=\"4\" xl=\"4\" className=\"vh-100 overflow-y-auto hide-scroll sticky-top\">\r\n                <FollowPane homeTweetUpdate={updateTweets}/>\r\n                </Col>\r\n            </MediaQuery>\r\n           \r\n          </Row>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import DOMPurify from 'dompurify';\n\nexport const truncateText = (text, lines) => {\n    if (!text)\n        return ''\n    let n = 0, i = 0\n    let length = text.length\n    for (i = 0; i < length; i++)\n        if (text[i] === '\\n')\n            if (n++ >= lines - 1)\n                break\n    return text.slice(0, i) + ((length > i + 1) ? ' ...' : '')\n}\n\nexport function numFormatter(num) {\n    if (num >= 1000 && num < 1000000) {\n        return (num / 1000).toFixed(2) + 'K'; \n    } else if (num >= 1000000) {\n        return (num / 1000000).toFixed(1) + 'M'; \n    } else if (num < 1000) {\n        return num; \n    }\n}\n\n\nexport function filterInput(input = '', type = 'custom', {\n    min_length: min = 1,\n    max_length: max = 70,\n    regex: reg = null,\n    identifier = null\n} = {}) {\n    identifier = identifier || `input {${type}}`\n    input = input.toString().trim()\n    let regexes = {\n        username: RegExp(`^[_a-zA-Z0-9]{${min},${max}}$`),\n        password: RegExp(`^\\\\S{${min},${max}}$`),\n        name: RegExp(`^.{${min},${max}}$`),\n    }\n    if (!reg) {\n        reg = regexes[type]\n    }\n    if (reg) {\n        if (!reg.test(input)) {\n            throw Error(`${identifier} must match regex: ${reg} (range between ${min} and ${max} characters)`)\n        }\n    }\n    if (type === 'html')\n        input = DOMPurify.sanitize(input, { ALLOWED_TAGS: ['b'] }).trim()\n    if (input.length > max || input.length < min) {\n        throw Error(`${identifier} must be minimum ${min} and maximum ${max} characters`)\n    }\n    if (input.includes('\\n')) \n        input = input.replace(/\\n+/g, '\\n').trim()\n        \n    return input;\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { filterInput } from '../utils/helpers'\r\nimport { Figure, Form, Col } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons/faTwitter'\r\nimport {AuthContext} from \"../../Context/auth-context\"\r\n\r\nclass Login extends React.Component {\r\n    static contextType = AuthContext;\r\n    state = {\r\n        disabled: false,\r\n        error: null,\r\n        password: '',\r\n        username: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = async (e) => {\r\n        console.log(process.env.NODE_ENV)\r\n\r\n        e.preventDefault()\r\n        if (this.state.disabled)\r\n            return\r\n        this.setState({ error: null, disabled: true })\r\n        try {\r\n            let form = e.target\r\n            let uid = filterInput(form.username.value, 'username', { min_length: 4 })\r\n            let password = filterInput(form.password.value, 'password')\r\n            let response = await fetch(process.env.REACT_APP_BACKEND_URL + \"/users/login\", {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    uid,\r\n                    password\r\n                }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            })\r\n\r\n            if (response.status >= 500) {\r\n                throw Error('Something went wrong.')\r\n            }\r\n            else if (response.status >= 400) {\r\n                throw Error('Incorrect credentials')\r\n            }\r\n            else if (response.ok) {\r\n                let data = await response.json()\r\n                console.log(data)\r\n                this.setState({ disabled: false })\r\n                this.context.login(data.uid, data.token)\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message)\r\n            this.setState({ error: error.message, disabled: false })\r\n        }\r\n   }\r\n    render() {\r\n        let disabled = this.state.disabled\r\n        return (\r\n            <Col style={{ maxWidth: \"400px\", padding:\"2rem\" }} className=\"mx-auto border px-3 pb-3\">\r\n                \r\n                    <Figure  style={{color: \"#1DA1F2\"}}  >\r\n                    <FontAwesomeIcon className=\"m-2\" size=\"3x\" icon={faTwitter} />\r\n                    </Figure>\r\n                \r\n                <h3 className=\"font-weight-bolder mt-3\">\r\n                    Sign in to Twitter\r\n                </h3>\r\n                <fieldset disabled={disabled}>\r\n                    <Form onSubmit={this.handleSubmit} >\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control\r\n                                onChange={this.handleChange}\r\n                                value={this.state.username}\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                autoCapitalize=\"off\"\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-0\" controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                onChange={this.handleChange}\r\n                                value={this.state.password}\r\n                                autoCorrect=\"off\"\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <p>\r\n                            <small className=\"text-danger\">{this.state.error}</small>\r\n                        </p>\r\n                        <div className=\"d-flex flex-column align-items-center\">\r\n                            <button type=\"submit\" className=\"btn btn-outline-primary btn-block rounded-pill font-weight-bold\">\r\n                                Log in\r\n                            </button>\r\n                            <small className=\"text-muted m-2\">or</small>\r\n                            <Link\r\n                                to=\"/signup\"\r\n                                className=\"btn btn-primary btn-block rounded-pill font-weight-bold\"\r\n                            >\r\n                                Sign up\r\n                            </Link>\r\n                        </div>\r\n                    </Form>\r\n                </fieldset>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\nexport default Login;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { filterInput } from '../utils/helpers'\r\nimport { Figure, Form, Col } from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons/faTwitter';\r\nimport {AuthContext} from \"../../Context/auth-context\"\r\n\r\n\r\nclass SignUp extends React.Component {\r\n    static contextType = AuthContext;\r\n    state = {\r\n        disabled: false,\r\n        error: null\r\n    }\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (this.state.disabled)\r\n            return\r\n        this.setState({ error: null, disabled: true })\r\n        try {\r\n            let form = e.target\r\n            let uid = filterInput(form.username.value, 'username', { min_length: 4 })\r\n            let password = filterInput(form.password.value, 'password')\r\n            let name = filterInput(form.fullname.value, 'name', { min_length: 0 })\r\n                       console.log(uid, password, name);\r\n\r\n            const response = await fetch(`${process.env.REACT_APP_BACKEND_URL}/users/signup`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    uid,\r\n                    password,\r\n                    name\r\n                })\r\n            })\r\n            // console.log(\"response: \", response);\r\n\r\n            if (!response.ok) {\r\n                if (response.status === 409) \r\n                    throw Error((await response.json()).message)\r\n                throw Error('Something went wrong')\r\n            }\r\n            let data = await response.json();\r\n            console.log(\"data: \", data);\r\n            this.setState({ disabled: false })\r\n            this.context.login(data.uid, data.token)\r\n        } catch (error) {\r\n            console.log(error.message)\r\n            this.setState({ error: error.message, disabled: false })\r\n        }\r\n\r\n    }\r\n    render() {\r\n        let disabled = this.state.disabled\r\n        return (\r\n            <Col style={{ maxWidth: \"400px\", padding:\"2rem\"  }} className=\"mx-auto border px-3 pb-3\">\r\n                <Figure style={{color: \"#1DA1F2\"}}>\r\n                <FontAwesomeIcon className=\"m-2\" size=\"3x\" icon={faTwitter} />\r\n                </Figure>\r\n                <h1 style = {{fontWeight:\"700\", padding:\"1rem\"}} className=\"font-weight-bolder\">\r\n                    Happening now\r\n                </h1>\r\n                <h5 style = {{paddingBottom:\"0.5rem\"}} className=\"font-weight-bolder\">\r\n                    Join twitter today.\r\n                </h5>\r\n                <fieldset disabled={disabled}>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Choose a username - <small className=\"text-muted\">required</small></Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                autoCapitalize=\"off\"\r\n                                autoComplete=\"off\"\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"fillname\">\r\n                            <Form.Label>Full name - <small className=\"text-muted\">optional</small></Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                name=\"fullname\"\r\n                                autoCapitalize=\"on\"\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Choose a password - <small className=\"text-muted\">required</small></Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                            ></Form.Control>\r\n                        </Form.Group>\r\n                        <p className=\"mt-n2\">\r\n                            <small>Already have account? <Link to=\"/login\">login instead</Link></small>\r\n                            <br />\r\n                            <small className=\"text-danger\">{this.state.error}</small>\r\n                        </p>\r\n                        <div className=\"d-flex flex-column align-items-center\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                className=\"btn btn-outline-primary font-weight-bold rounded-pill btn-block\">\r\n                                <span>Sign up</span>\r\n                            </button>\r\n                            <div className=\"seperator\"><span>or</span></div>\r\n                            <Link\r\n                                to=\"/login\"\r\n                                className=\"btn btn-primary font-weight-bold rounded-pill btn-block\">\r\n                                <span>Log in</span>\r\n                            </Link>\r\n                        </div>\r\n                    </Form>\r\n                </fieldset>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\nexport default SignUp;","import { useCallback, useState } from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route, Routes, Navigate } from \"react-router-dom\";\nimport HomePage from \"./Pages/HomePage/HomePage\";\nimport Login from \"./Pages/Login/Login\";\nimport SignUp from \"./Pages/SignUp/SignUp\";\nimport { AuthContext } from './Context/auth-context';\nconst App = () => {\n  const [token, setToken] = useState(false);\n  const [uid, setUid] = useState(false);\n\n  console.log(process.env.NODE_ENV)\n  const login = useCallback((uid, token) => {\n    setToken(true);\n    setUid(uid);\n  },[])\n  const logout = useCallback(() => {\n    setToken(null)\n    setUid(null);\n  },[])\n  let routes;\n\n  if(token) {\n    routes = (\n      <Routes>\n      <Route path=\"/\" exact element={<HomePage />} />\n      <Route path=\"*\" element={<Navigate to =\"/\" />}/>\n       </Routes>\n    )\n  } else {\n    routes = (\n      <Routes>\n    <Route path=\"/login\" element={<Login />} />\n     <Route path=\"/signup\" element={<SignUp />} />\n     <Route path=\"*\" element={<Navigate to =\"/login\" />}/>\n     </Routes>\n    )\n    \n  }\n  return (\n    <AuthContext.Provider value={{isLoggedIn:!!token, token: token, uid:uid, login:login, logout:logout}}>\n    <Router>\n    {routes}\n   </Router>\n   </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport 'bootstrap/dist/css/bootstrap.css';\nrequire('dotenv').config();\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}